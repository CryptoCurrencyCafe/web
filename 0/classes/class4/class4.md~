## Signing with Elliptic Curves

**Elliptic curve discrete logarithm problem:** given points <span class="math">_P_</span> and <span class="math">_Q_</span>
  on an elliptic curve, it is hard to find an integer <span class="math">_k_</span> such that <span class="math">_Q_ = _kP_</span>.

**Parameters:** curve, _G_ (a point on curve), (large) _n_ such that <span class="math">_nG_ = 0</span>. 

**Key pair: **  
    Private key: <span class="math">_d_</span> = pick a random integer in <span class="math">[1, _n_-1]</span>
    Public key:  point on the curve, <span class="math">_Q_ = _dG_</span>

**Signing:**
  pick random integer <span class="math">_k_</span> in <span class="math">[1, _n_-1]</span>
  compute curve point: <span class="math">(_x_, _y_) = _kG_</span>
  signature = <span class="math">(_x_ mod _n_, _k_<sup>-1</sup>(_z_ + _rd_) mod _n_)</span>

What are the reasons for prefering ECC for signatures in bitcoin over RSA-based signature algorithms?
<div class="gap>"

</div>


For an interesting history of improvements in factoring, see Carl Pomerance, [_A Tale of Two Sieves_](http://www.ams.org/notices/199612/pomerance.pdf), Notices of the AMS, December 1996: 

> John Pollard in 1988 circulated a letter to several people outlining an idea of his
> for factoring certain big numbers via algebraic number fields. His
> original idea was not for any large composite, but for certain “pretty”
> composites that had the property that they were close to powers and had
> certain other nice properties as well. He illustrated the idea with a
> factorization of the number 2<sup>2<sup>7</sup></sup> + 1, the seventh Fermat number.
> I must admit that at first I was not too keen on Pollard’s method, since it seemed to be applicable
> to only a few numbers. ... 
> But what of general numbers? In the summer of 1989 I was to give a talk at the meeting of the
> Canadian Number Theory Association in Vancouver. It was to be a survey talk on factoring,
> and I figured it would be a good idea to mention Pollard's new method. On the plane on the way
> to the meeting I did a complexity analysis of the method as to how it would work for general
> numbers, assuming myriad technical difficulties did not exist and that it was possible to run
> it for general numbers. I was astounded. The complexity for this algorithm-that-did-not-yet exist
> was of the shape <span class="math">exp(_c_(log _n_)<sup>1/3</sup> (log log _n_)<sup>2/3</sup>). 

Erich Wenger and Paul Wolfger, [_Solving the Discrete Logarithm of a
113-bit Koblitz Curve with an FPGA
Cluster_](http://eprint.iacr.org/2014/368.pdf). 

> It is possible to repeatedly fold a standard letter-sized sheet of
> paper at the midway point about six to seven times. In 2012, some MIT
> students were able to fold an 1.2 kilometer long toilet paper 13
> times. And every time the paper was folded, the number of layers on
> top of each other doubled. Therefore, the MIT students ended up with
> 213 = 8192 layers of paper on top of each other.  And poor Eve’s job
> was to manually count all layers one by one.  Similar principles apply
> in cryptography, although bigger numbers are involved.  In Elliptic
> Curve Cryptography (ECC), where <span class="math">log<sub>2</sub>
> _n_</span>-bit private keys are used, Eve does not have to iterate
> through all possible <span class="math">_n_</span> keys. Instead, Eve
> would use the more efficient parallelizable Pollard’s rho algorithm
> that finishes in approximately <span class="math">sqrt(_n_)</span>
> steps. The omnipresent question is how big <span class="math">_n_</span> has to be such that even
> the most powerful adversaries are not able to reconstruct a private
> key. Especially in embedded, cost-sensitive applications, it is
> important to use keys that are only as large as necessary.


## Bitcoin's Curve

Standards for Efficient Cryptography: [_SEC 2: Recommended Elliptic
Curve Domain Parameters_](http://www.secg.org/sec2-v2.pdf) (Certicom
Research, 27 January 2010)

> Verifiably random parameters offer some additional conservative features. These parameters are
> chosen from a seed using SHA-1 as specified in ANSI X9.62 [X9.62]. This process ensures that
> the parameters cannot be predetermined. The parameters are therefore extremely unlikely to
> be susceptible to future special-purpose attacks, and no trapdoors can have been placed in the
> parameters during their generation. When elliptic curve domain parameters are chosen verifiably
> at random, the seed S used to generate the parameters may optionally be stored along with the
> parameters so that users can verify the parameters were chosen verifiably at random.

What does it mean for parameters to be "verifiably random"?
<div class="gap">

</div>

# Randomness

**Kolmogorov Complexity:** <span class="math">_K_(_s_)</span> = the length of the shortest description of <span class="math">_s_</span>.

**Kolmogorov's Definition of Random:** A sequence <span
  class="math">_s_</span> is random, if <span class="math">_K_(_s_) =
  |_s_| + _C_</span> 

What is the Kolmogorov Complexity of the string `1MRigEo5423vycLnUdSnA4C6Ts691fUiYu;18UikW89q9VgGDftQW3Gmuhe4sQDCFP5kD;19ZQwQmfAsgy47ErehfkW3SeSzNGFfH9iN;1AZCH1insc6JrT2Z9SiNvgtTugXg8sF8yd;15qYggRJvmyZfpchxvNqr6h3pNjw6bGBV9;1C943NwPPffUFY7VDzi3kt7KikXwc2vdkN;1JBhLLCgNYhR8f6AZcRS3mjfEAmMzPvwyf;1JvDrBSYm6o4ZTQUhwUE4FhPFxd2wuXWUR;1KcBM1RNhcp1oENycoD4AezA5Se4SrsZnA;16JZWC433XRxjWwR7X65uxRVFdLTmoPr4t;149LB8VYaT1BdMLyQUL92Kj6KrJfNwcp64;16zDGuzbwkHjW8dNYMw9stDjRbTzVSLZU1;1HfMaZn53ZDWKgmhWxk1UPZMjQ6QmpW6m;14gZWnuwKpRLTCUFCAgTZMciRaEdrkmEpr;1BZ2ateDPugmqLzYsXVy9EK5BguvXa2Bnj;1rCdRyMVcZHJaHA2LKUvRqYBcHqvAfQkc;1Ak8VwX6x4FPbA6aXTC3BQGQHnnhfaJuB8;129sBvF6Jternwdn5XcoA37LinQRcmAD5U;1H2in1HxEzSKHssPtog2krjFPiPfrKSiw4;...`?
<div class="gap">

</div>


Daniel J. Bernstein, Tung Chou, Chitchanok Chuengsatiansup, Andreas
H&uuml;lsing, Tanja Lange, Ruben Niederhagen, and Christine van Vredendaal.
[_How to manipulate curve standards: a white paper for the black
hat_](https://eprint.iacr.org/2014/571.pdf), 2014.

How likely is it that the parameters for the secp256k1 curve used by bitcoin have a trapdoor?
<div class="gap">

</div>

How should ECC parameters be generated?
<div class="gap">  
</div>

[_Root Zone DNSSEC KSK Ceremonies Guide_](http://www.root-dnssec.org/wp-content/uploads/2010/02/draft-icann-dnssec-ceremonies-00.txt)

Root Key signing for the DNSSEC (Domain Name System): [DNSSEC KSK Ceremony 20](https://www.iana.org/dnssec/ceremonies/20)



## Dual-EC PRNG 

[NIST Special Publication 800-90A Recommendation for Random Number
Generation Using Deterministic Random Bit
Generators](http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf)


Michael Wertheimer (NSA), [_Encryption and the NSA Role in International
Standards_](http://www.ams.org/notices/201502/rnoti-p165.pdf), Notices
of the American Mathematical Society, February 2015.
